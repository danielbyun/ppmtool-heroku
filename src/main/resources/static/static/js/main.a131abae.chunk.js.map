{"version":3,"sources":["Actions/projectActions.js","Actions/types.js","Components/Project/ProjectItem.js","Components/Project/CreateProjectButton.js","Components/Dashboard.js","SecurityUtils/setJwtToken.js","Actions/securityActions.js","Components/Layout/Header.js","Components/Project/AddProject.js","Components/Project/UpdateProject.js","Reducers/errorReducer.js","Reducers/projectReducer.js","Reducers/backlogReducer.js","Reducers/securityReducer.js","Reducers/index.js","Store.js","Components/ProjectBoard/ProjectTasks/ProjectTask.js","Actions/backlogActions.js","Components/ProjectBoard/Backlog.js","Components/ProjectBoard/ProjectBoard.js","Components/ProjectBoard/ProjectTasks/AddProjectTask.js","Components/ProjectBoard/ProjectTasks/UpdateProjectTask.js","Components/Layout/Landing.js","Components/UserManagement/Register.js","Components/UserManagement/Login.js","SecurityUtils/SecureRoute.js","App.js","serviceWorker.js","index.js"],"names":["createProject","project","history","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","dispatch","wrap","_context","prev","next","axios","post","push","type","payload","t0","response","data","stop","_x","apply","this","arguments","ProjectItem","onDeleteClick","id","_this","props","deleteProject","react_default","createElement","Fragment","className","projectIdentifier","projectName","description","react_router_dom","to","concat","onClick","bind","Component","connect","_ref4","_callee4","_context4","window","confirm","delete","_x4","CreateProjectButton","Dashboard","getProjects","projects","Project_CreateProjectButton","map","Project_ProjectItem","key","state","_ref2","_callee2","res","_context2","get","sent","_x2","setJwtToken","token","defaults","headers","common","logout","localStorage","removeItem","Header","location","href","headerLinks","_this$props$security","security","validToken","user","userIsAuthenticated","react_router_dom_min","fullName","userIsNotAuthenticated","data-toggle","data-target","AddProject","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","start_date","end_date","errors","onChange","assertThisInitialized","onSubmit","nextProps","setState","e","defineProperty","target","name","value","preventDefault","newProject","classnames","is-invalid","placeholder","UpdateProject","_nextProps$project","match","params","getProject","updateProject","disabled","_ref3","_callee3","_context3","_x3","initialState","project_tasks","project_task","combineReducers","length","undefined","action","objectSpread","filter","backlog","projectSequence","middleware","thunk","ReactReduxDevTools","__REDUX_DEVTOOLS_EXTENSION__","store","navigator","userAgent","includes","createStore","rootReducer","compose","applyMiddleware","ProjectTask","backlog_id","pt_id","deleteProjectTask","priorityString","priorityClass","priority","summary","acceptanceCriteria","_ref5","_callee5","_context5","_x5","Backlog","todoItems","inProgressItems","doneItems","tasks","i","status","sortTasks","project_tasks_prop","ProjectTasks_ProjectTask","ProjectBoard","getBacklog","BoardContent","projectNotFound","role","ProjectBoard_Backlog","boardAlgorithm","AddProjectTask","dueDate","newProjectTask","addProjectTask","UpdateProjectTask","create_At","_this$props$match$par","getProjectTask","_nextProps$project_ta","updateProjectTask","patch","Landing","Register","username","password","confirmPassword","newUser","createNewUser","Login","LoginRequest","login","decoded","setItem","jwt_decode","component","otherProps","objectWithoutProperties","react_router","assign","render","jwtToken","getItem","decoded_jwtToken","currentTime","Date","now","exp","App","es","Layout_Header","exact","path","SecureRoute","Boolean","hostname","ReactDOM","src_App_0","document","getElementById","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a131abae.chunk.js","sourcesContent":["// library to communicate with the backend\nimport axios from \"axios\";\nimport { GET_ERRORS, GET_PROJECTS, GET_PROJECT, DELETE_PROJECT } from \"./types\";\n\n// project object and redirection using history\n// async = function returns a promise (await)\nexport const createProject = (project, history) => async dispatch => {\n  try {\n    // using axios to send POST request to the server with the project object\n    await axios.post(\"/api/project\", project);\n    // in spring controller basically the return statement\n    history.push(\"/dashboard\");\n    // clear error messages if any\n    dispatch({\n      type: GET_ERRORS,\n      payload: {}\n    });\n  } catch (error) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: error.response.data\n    });\n  }\n};\n\nexport const getProjects = () => async dispatch => {\n  const res = await axios.get(\"/api/project/all\");\n  dispatch({\n    type: GET_PROJECTS,\n    payload: res.data\n  });\n};\n\nexport const getProject = (id, history) => async dispatch => {\n  try {\n    const res = await axios.get(`/api/project/${id}`);\n    dispatch({ type: GET_PROJECT, payload: res.data });\n  } catch (error) {\n    history.push(\"/dashboard\");\n  }\n};\n\nexport const deleteProject = id => async dispatch => {\n  if (\n    window.confirm(\n      \"Are you sure? This will delete the entire project and all the data inside of it.\"\n    )\n  ) {\n    try {\n      await axios.delete(`/api/project/${id}`);\n      dispatch({ type: DELETE_PROJECT, payload: id });\n    } catch (error) {}\n  }\n};\n","// getting errors\nexport const GET_ERRORS = \"GET_ERRORS\";\n// getting all projects\nexport const GET_PROJECTS = \"GET_PROJECTS\";\n// getting one project\nexport const GET_PROJECT = \"GET_PROJECT\";\n// deleting project\nexport const DELETE_PROJECT = \"DELETE_PROJECT\";\n\n// Types for BACKLOG ACTIONS\nexport const GET_BACKLOG = \"GET_BACKLOG\";\nexport const GET_PROJECT_TASK = \"GET_PROJECT_TASK\";\nexport const DELETE_PROJECT_TASK = \"DELETE_PROJECT_TASK\";\n\nexport const SET_CURRENT_USER = \"SET_CURRENT_USER\";\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { deleteProject } from \"../../Actions/projectActions\";\n\nclass ProjectItem extends Component {\n  onDeleteClick = id => {\n    this.props.deleteProject(id);\n  };\n\n  render() {\n    // plug it the props from Dashboard that was sent here\n    const { project } = this.props;\n    return (\n      <>\n        {\n          // <!-- Project Item Component -->\n        }\n        <div className=\"container\">\n          <div className=\"card card-body bg-light mb-3\">\n            <div className=\"row\">\n              <div className=\"col-2\">\n                <span className=\"mx-auto\">{project.projectIdentifier}</span>\n              </div>\n              <div className=\"col-lg-6 col-md-4 col-8\">\n                {\n                  // plug in each dynamically generated project information\n                }\n                <h3>{project.projectName}</h3>\n\n                <p>{project.description}</p>\n              </div>\n              <div className=\"col-md-4 d-none d-lg-block\">\n                <ul className=\"list-group\">\n                  <Link to={`/projectBoard/${project.projectIdentifier}`}>\n                    <li className=\"list-group-item board\">\n                      <i className=\"fa fa-flag-checkered pr-1\" /> Project Board{\" \"}\n                    </li>\n                  </Link>\n                  <Link to={`/updateProject/${project.projectIdentifier}`}>\n                    <li className=\"list-group-item update\">\n                      <i className=\"fa fa-edit pr-1\" />\n                      Update Project Info\n                    </li>\n                  </Link>\n                  <li\n                    className=\"list-group-item delete\"\n                    onClick={this.onDeleteClick.bind(\n                      this,\n                      project.projectIdentifier\n                    )}\n                  >\n                    <i className=\"fa fa-minus-circle pr-1\" />\n                    Delete Project\n                  </li>\n                </ul>\n              </div>\n            </div>\n          </div>\n        </div>\n        {\n          // <!-- End of Project Item Component -->\n        }\n      </>\n    );\n  }\n}\n\nProjectItem.propTypes = {\n  deleteProject: PropTypes.func.isRequired\n};\n\nexport default connect(\n  null,\n  { deleteProject }\n)(ProjectItem);\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst CreateProjectButton = () => {\n  return (\n    <React.Fragment>\n      <Link to=\"/addProject\" className=\"btn btn-lg btn-info\">\n        Create a Project\n      </Link>\n    </React.Fragment>\n  );\n};\n\nexport default CreateProjectButton;\n","import React, { Component } from \"react\";\nimport ProjectItem from \"./Project/ProjectItem\";\nimport CreateProjectButton from \"./Project/CreateProjectButton\";\nimport { connect } from \"react-redux\";\nimport { getProjects } from \"../Actions/projectActions\";\nimport PropTypes from \"prop-types\";\n\nclass Dashboard extends Component {\n  // lifecycle hook\n  // what happens when we mount\n  componentDidMount() {\n    // call the function\n    this.props.getProjects();\n  }\n  render() {\n    // the list of projects returned from the server to display to the UI\n    const { projects } = this.props.project;\n    return (\n      <>\n        <div className=\"projects\">\n          <div className=\"container\">\n            <div className=\"row\">\n              <div className=\"col-md-12\">\n                <h1 className=\"display-4 text-center\">Projects</h1>\n                <br />\n                <CreateProjectButton />\n                <br />\n                <hr />\n                {\n                  // wire it up here to display\n                  // by using the map function\n                }\n                {projects.map(project => (\n                  <ProjectItem key={project.id} project={project} />\n                ))}\n              </div>\n            </div>\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n\nDashboard.propTypes = {\n  project: PropTypes.object.isRequired,\n  getProjects: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  project: state.project\n});\n\nexport default connect(\n  mapStateToProps,\n  { getProjects }\n)(Dashboard);\n","import axios from \"axios\";\n\nconst setJwtToken = token => {\n  // putting the token information and setting it to the Authorization like we did manually on POSTman\n  if (token) {\n    axios.defaults.headers.common[\"Authorization\"] = token;\n  } else {\n    delete axios.defaults.headers.common[\"Authorization\"];\n  }\n};\n\nexport default setJwtToken;\n","import axios from \"axios\";\nimport { GET_ERRORS, SET_CURRENT_USER } from \"./types\";\nimport jwt_decode from \"jwt-decode\";\nimport setJwtToken from \"../SecurityUtils/setJwtToken\";\n\nexport const createNewUser = (newUser, history) => async dispatch => {\n  try {\n    // server call\n    await axios.post(\"/api/users/register\", newUser);\n\n    // redirect after success\n    history.push(\"/login\");\n\n    dispatch({\n      type: GET_ERRORS,\n      payload: {}\n    });\n  } catch (error) {\n    // if there is an error in the response\n    dispatch({\n      type: GET_ERRORS,\n      payload: error.response.data\n    });\n  }\n};\n\n// security action (login) code\nexport const login = LoginRequest => async dispatch => {\n  try {\n    // post action => LoginRequest\n    const res = await axios.post(\"/api/users/login\", LoginRequest);\n\n    // extract token from res.data\n    const { token } = res.data;\n\n    // store the token in the localStorage\n    localStorage.setItem(\"jwtToken\", token);\n\n    // set our token in the header ***\n    setJwtToken(token);\n\n    // decode token on React\n    const decoded = jwt_decode(token);\n\n    // dispatch to our securityReducer\n    dispatch({\n      type: SET_CURRENT_USER,\n      payload: decoded\n    });\n  } catch (error) {\n    // dispatch the errors\n    dispatch({\n      type: GET_ERRORS,\n      payload: error.response.data\n    });\n  }\n};\n\n// logout function\nexport const logout = () => dispatch => {\n  // remove token in the localStorage\n  localStorage.removeItem(\"jwtToken\");\n  setJwtToken(false);\n\n  // no currently logged in user\n  dispatch({\n    type: SET_CURRENT_USER,\n    payload: {}\n  });\n};\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom/cjs/react-router-dom.min\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { logout } from \"../../Actions/securityActions\";\n\nclass Header extends Component {\n  logout() {\n    this.props.logout();\n    window.location.href = \"/\";\n  }\n  render() {\n    const { validToken, user } = this.props.security;\n\n    const userIsAuthenticated = (\n      <div className=\"collapse navbar-collapse\" id=\"mobile-nav\">\n        <ul className=\"navbar-nav mr-auto\">\n          <li className=\"nav-item\">\n            <Link className=\"nav-link\" to={\"/dashboard\"}>\n              Dashboard\n            </Link>\n          </li>\n        </ul>\n\n        <ul className=\"navbar-nav ml-auto\">\n          <li className=\"nav-item\">\n            <Link className=\"nav-link \" to={\"/dashboard\"}>\n              <i className=\"fas fa-user-circle mr-1\" />\n              {user.fullName}\n            </Link>\n          </li>\n          <li className=\"nav-item\">\n            <Link\n              className=\"nav-link\"\n              to={\"/logout\"}\n              onClick={this.logout.bind(this)}\n            >\n              Logout\n            </Link>\n          </li>\n        </ul>\n      </div>\n    );\n\n    const userIsNotAuthenticated = (\n      <div className=\"collapse navbar-collapse\" id=\"mobile-nav\">\n        <ul className=\"navbar-nav mr-auto\">\n          <li className=\"nav-item\">\n            <Link className=\"nav-link\" to={\"/dashboard\"}>\n              Dashboard\n            </Link>\n          </li>\n        </ul>\n\n        <ul className=\"navbar-nav ml-auto\">\n          <li className=\"nav-item\">\n            <Link className=\"nav-link \" to={\"/register\"}>\n              Sign Up\n            </Link>\n          </li>\n          <li className=\"nav-item\">\n            <Link className=\"nav-link\" to={\"/login\"}>\n              Login\n            </Link>\n          </li>\n        </ul>\n      </div>\n    );\n\n    let headerLinks;\n\n    if (validToken && user) {\n      headerLinks = userIsAuthenticated;\n    } else {\n      headerLinks = userIsNotAuthenticated;\n    }\n\n    return (\n      <div>\n        <nav className=\"navbar navbar-expand-sm navbar-dark bg-primary mb-4\">\n          <div className=\"container\">\n            <Link className=\"navbar-brand\" to={\"/\"}>\n              Personal Project Management Tool\n            </Link>\n            <button\n              className=\"navbar-toggler\"\n              type=\"button\"\n              data-toggle=\"collapse\"\n              data-target=\"#mobile-nav\"\n            >\n              <span className=\"navbar-toggler-icon\" />\n            </button>\n            {headerLinks}\n          </div>\n        </nav>\n      </div>\n    );\n  }\n}\n\nHeader.propTypes = {\n  logout: PropTypes.func.isRequired,\n  security: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  security: state.security\n});\n\nexport default connect(\n  mapStateToProps,\n  { logout }\n)(Header);\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { createProject } from \"../../Actions/projectActions\";\nimport classnames from \"classnames\";\n\nclass AddProject extends Component {\n  constructor() {\n    super();\n\n    // sets initial state for input fields to update later\n    this.state = {\n      projectName: \"\",\n      projectIdentifier: \"\",\n      description: \"\",\n      start_date: \"\",\n      end_date: \"\",\n      errors: {}\n    };\n    // binding\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  // life cycle hooks\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      // grab the errors object and load it\n      this.setState({ errors: nextProps.errors });\n    }\n  }\n\n  onChange(e) {\n    // reading the value of the each input\n    this.setState({ [e.target.name]: e.target.value });\n  }\n  // form submit action\n  onSubmit(e) {\n    // to not have the webpage refresh\n    e.preventDefault();\n\n    // the form getting passed to the server\n    const newProject = {\n      // get the value of each input\n      projectName: this.state.projectName,\n      projectIdentifier: this.state.projectIdentifier,\n      description: this.state.description,\n      start_date: this.state.start_date,\n      end_date: this.state.end_date\n    };\n\n    this.props.createProject(newProject, this.props.history);\n  }\n  render() {\n    // use the constructor to get the errors\n    const { errors } = this.state;\n\n    return (\n      <div>\n        {/*\n            1) check name attribute input fields\n            2) create constructor\n            3) set state\n            4) set value on input fields\n            5) create onChange function\n            6) set onChange on each input field\n            7) bind on constructor\n            8) check state change in the react extension\n         */}\n        <div className=\"register\">\n          <div className=\"container\">\n            <div className=\"row\">\n              <div className=\"col-md-8 m-auto\">\n                <h5 className=\"display-4 text-center\">Create Project form</h5>\n                <hr />\n                <form onSubmit={this.onSubmit}>\n                  <div className=\"form-group\">\n                    <input\n                      type=\"text\"\n                      className={classnames(\"form-control form-control-lg\", {\n                        \"is-invalid\": errors.projectName\n                      })}\n                      placeholder=\"Project Name\"\n                      name=\"projectName\"\n                      value={this.state.projectName}\n                      // applying the bind function\n                      onChange={this.onChange}\n                    />\n                    {errors.projectName && (\n                      <div className=\"invalid-feedback\">\n                        {errors.projectName}\n                      </div>\n                    )}\n                  </div>\n                  <div className=\"form-group\">\n                    <input\n                      type=\"text\"\n                      className={classnames(\"form-control form-control-lg\", {\n                        \"is-invalid\": errors.projectIdentifier\n                      })}\n                      placeholder=\"Unique Project ID\"\n                      name=\"projectIdentifier\"\n                      value={this.state.projectIdentifier}\n                      // applying the bind function\n                      onChange={this.onChange}\n                    />\n                    {errors.projectIdentifier && (\n                      <div className=\"invalid-feedback\">\n                        {errors.projectIdentifier}\n                      </div>\n                    )}\n                  </div>\n                  <div className=\"form-group\">\n                    <textarea\n                      className={classnames(\"form-control form-control-lg\", {\n                        \"is-invalid\": errors.description\n                      })}\n                      placeholder=\"Project Description\"\n                      name=\"description\"\n                      value={this.state.description}\n                      // applying the bind function\n                      onChange={this.onChange}\n                    />\n                    {errors.description && (\n                      <div className=\"invalid-feedback\">\n                        {errors.description}\n                      </div>\n                    )}\n                  </div>\n                  <h6>Start Date</h6>\n                  <div className=\"form-group\">\n                    <input\n                      type=\"date\"\n                      className=\"form-control form-control-lg\"\n                      name=\"start_date\"\n                      value={this.start_date}\n                      // applying the bind function\n                      onChange={this.onChange}\n                    />\n                  </div>\n                  <h6>Estimated End Date</h6>\n                  <div className=\"form-group\">\n                    <input\n                      type=\"date\"\n                      className=\"form-control form-control-lg\"\n                      name=\"end_date\"\n                      value={this.end_date}\n                      // applying the bind function\n                      onChange={this.onChange}\n                    />\n                  </div>\n\n                  <input\n                    type=\"submit\"\n                    className=\"btn btn-primary btn-block mt-4\"\n                  />\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nAddProject.propTypes = {\n  createProject: PropTypes.func.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  errors: state.errors\n});\n\nexport default connect(\n  mapStateToProps,\n  { createProject }\n)(AddProject);\n","import React, { Component } from \"react\";\nimport { getProject, createProject } from \"../../Actions/projectActions\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport classnames from \"classnames\";\n\nclass UpdateProject extends Component {\n  //set state\n  constructor() {\n    super();\n\n    this.state = {\n      id: \"\",\n      projectName: \"\",\n      projectIdentifier: \"\",\n      description: \"\",\n      start_date: \"\",\n      end_date: \"\",\n      errors: {}\n    };\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({ errors: nextProps.errors });\n    }\n    const {\n      id,\n      projectName,\n      projectIdentifier,\n      description,\n      start_date,\n      end_date\n    } = nextProps.project;\n\n    this.setState({\n      id,\n      projectName,\n      projectIdentifier,\n      description,\n      start_date,\n      end_date\n    });\n  }\n\n  componentDidMount() {\n    const { id } = this.props.match.params;\n    this.props.getProject(id, this.props.history);\n  }\n\n  onChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n\n    const updateProject = {\n      id: this.state.id,\n      projectName: this.state.projectName,\n      projectIdentifier: this.state.projectIdentifier,\n      description: this.state.description,\n      start_date: this.state.start_date,\n      end_date: this.state.end_date\n    };\n\n    this.props.createProject(updateProject, this.props.history);\n  }\n\n  render() {\n    const { errors } = this.state;\n    return (\n      <div className=\"project\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-8 m-auto\">\n              <h5 className=\"display-4 text-center\">Update Project form</h5>\n              <hr />\n              <form onSubmit={this.onSubmit}>\n                <div className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.projectName\n                    })}\n                    placeholder=\"Project Name\"\n                    name=\"projectName\"\n                    value={this.state.projectName}\n                    onChange={this.onChange}\n                  />\n                  {errors.projectName && (\n                    <div className=\"invalid-feedback\">{errors.projectName}</div>\n                  )}\n                </div>\n                <div className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    className=\"form-control form-control-lg\"\n                    placeholder=\"Unique Project ID\"\n                    name=\"projectIdentifier\"\n                    value={this.state.projectIdentifier}\n                    onChange={this.onChange}\n                    disabled\n                  />\n                </div>\n                <div className=\"form-group\">\n                  <textarea\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.description\n                    })}\n                    placeholder=\"Project Description\"\n                    name=\"description\"\n                    onChange={this.onChange}\n                    value={this.state.description}\n                  />\n                  {errors.description && (\n                    <div className=\"invalid-feedback\">{errors.description}</div>\n                  )}\n                </div>\n                <h6>Start Date</h6>\n                <div className=\"form-group\">\n                  <input\n                    type=\"date\"\n                    className=\"form-control form-control-lg\"\n                    name=\"start_date\"\n                    value={this.state.start_date}\n                    onChange={this.onChange}\n                  />\n                </div>\n                <h6>Estimated End Date</h6>\n                <div className=\"form-group\">\n                  <input\n                    type=\"date\"\n                    className=\"form-control form-control-lg\"\n                    name=\"end_date\"\n                    value={this.state.end_date}\n                    onChange={this.onChange}\n                  />\n                </div>\n\n                <input\n                  type=\"submit\"\n                  className=\"btn btn-primary btn-block mt-4\"\n                />\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nUpdateProject.propTypes = {\n  getProject: PropTypes.func.isRequired,\n  createProject: PropTypes.func.isRequired,\n  project: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  project: state.project.project,\n  errors: state.errors\n});\n\nexport default connect(\n  mapStateToProps,\n  { getProject, createProject }\n)(UpdateProject);\n","import { GET_ERRORS } from \"../Actions/types\";\n\n// initial state\nconst initialState = {};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case GET_ERRORS:\n      return action.payload;\n    default:\n      return state;\n  }\n}\n","import { GET_PROJECTS, GET_PROJECT, DELETE_PROJECT } from \"../Actions/types\";\n\nconst initialState = {\n  projects: [],\n  project: {}\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case GET_PROJECTS:\n      return {\n        ...state,\n        projects: action.payload\n      };\n    case GET_PROJECT:\n      return {\n        ...state,\n        project: action.payload\n      };\n    case DELETE_PROJECT:\n      return {\n        ...state,\n        projects: state.projects.filter(\n          // also get rid of it in the state\n          project => project.projectIdentifier !== action.payload\n        )\n      };\n    default:\n      return state;\n  }\n}\n","import {\n  GET_BACKLOG,\n  GET_PROJECT_TASK,\n  DELETE_PROJECT_TASK\n} from \"../Actions/types\";\n\nconst initialState = {\n  project_tasks: [],\n  project_task: {}\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case GET_BACKLOG:\n      return {\n        ...state,\n        project_tasks: action.payload\n      };\n    case GET_PROJECT_TASK:\n      return {\n        ...state,\n        project_task: action.payload\n      };\n    case DELETE_PROJECT_TASK:\n      return {\n        ...state,\n        project_tasks: state.project_tasks.filter(\n          project_task => project_task.projectSequence !== action.payload\n        )\n      };\n    default:\n      return state;\n  }\n}\n","import { SET_CURRENT_USER } from \"../Actions/types\";\n\nconst initialState = {\n  // set user\n  user: {},\n  validToken: false\n};\n\nconst booleanActionPayload = payload => {\n  if (payload) {\n    return true;\n  } else {\n    return false;\n  }\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case SET_CURRENT_USER:\n      return {\n        ...state,\n        validToken: booleanActionPayload(action.payload),\n        user: action.payload\n      };\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from \"redux\";\nimport errorReducer from \"./errorReducer\";\nimport projectReducer from \"./projectReducer\";\nimport backlogReducer from \"./backlogReducer\";\nimport securityReducer from \"./securityReducer\";\n\nexport default combineReducers({\n  // all the reducers we're creating\n  errors: errorReducer,\n  project: projectReducer,\n  backlog: backlogReducer,\n  security: securityReducer\n});\n","import { createStore, applyMiddleware, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"./Reducers\";\n\n// initial state of the application\nconst initialState = {};\n\n// middleware\nconst middleware = [thunk];\n\n// store\nlet store;\n\nconst ReactReduxDevTools =\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__();\n\nif (window.navigator.userAgent.includes(\"Chrome\") && ReactReduxDevTools) {\n  store = createStore(\n    rootReducer,\n    initialState,\n    // this way if we add more middlewares in the above array, it'll automatically update\n    compose(\n      applyMiddleware(...middleware),\n      ReactReduxDevTools\n    )\n  );\n} else {\n  // in other browsers other than chrome\n  store = createStore(\n    rootReducer,\n    initialState,\n    // this way if we add more middlewares in the above array, it'll automatically update\n    compose(applyMiddleware(...middleware))\n  );\n}\n\nexport default store;\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { deleteProjectTask } from \"../../../Actions/backlogActions\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\n\nclass ProjectTask extends Component {\n  onDeleteClick(backlog_id, pt_id) {\n    this.props.deleteProjectTask(backlog_id, pt_id);\n  }\n  render() {\n    const { project_task } = this.props;\n    let priorityString;\n    let priorityClass;\n\n    if (project_task.priority === 1) {\n      priorityClass = \"bg-danger text-light\";\n      priorityString = \"HIGH\";\n    }\n\n    if (project_task.priority === 2) {\n      priorityClass = \"bg-warning text-light\";\n      priorityString = \"MEDIUM\";\n    }\n\n    if (project_task.priority === 3) {\n      priorityClass = \"bg-info text-light\";\n      priorityString = \"LOW\";\n    }\n\n    return (\n      <div className=\"card mb-1 bg-light\">\n        <div className={`card-header text-primary ${priorityClass}`}>\n          ID: {project_task.projectSequence} -- Priority: {priorityString}\n        </div>\n        <div className=\"card-body bg-light\">\n          <h5 className=\"card-title\">{project_task.summary}</h5>\n          <p className=\"card-text text-truncate \">\n            {project_task.acceptanceCriteria}\n          </p>\n          <Link\n            to={`/updateProjectTask/${project_task.projectIdentifier}/${\n              project_task.projectSequence\n            }`}\n            className=\"btn btn-primary\"\n          >\n            View / Update\n          </Link>\n\n          <button\n            className=\"btn btn-danger ml-4\"\n            onClick={this.onDeleteClick.bind(\n              this,\n              project_task.projectIdentifier,\n              project_task.projectSequence\n            )}\n          >\n            Delete\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nProjectTask.propTypes = {\n  deleteProjectTask: PropTypes.func.isRequired\n};\nexport default connect(\n  null,\n  { deleteProjectTask }\n)(ProjectTask);\n","import axios from \"axios\";\nimport {\n  GET_ERRORS,\n  GET_BACKLOG,\n  GET_PROJECT_TASK,\n  DELETE_PROJECT_TASK\n} from \"./types\";\n\nexport const addProjectTask = (\n  backlog_id,\n  project_task,\n  history\n) => async dispatch => {\n  try {\n    await axios.post(`/api/backlog/${backlog_id}`, project_task);\n    history.push(`/projectBoard/${backlog_id}`);\n    dispatch({\n      type: GET_ERRORS,\n      payload: {}\n    });\n  } catch (error) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: error.response.data\n    });\n  }\n};\n\nexport const getBacklog = backlog_id => async dispatch => {\n  try {\n    const res = await axios.get(`/api/backlog/${backlog_id}`);\n    dispatch({\n      type: GET_BACKLOG,\n      payload: res.data\n    });\n  } catch (error) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: error.response.data\n    });\n  }\n};\n\nexport const getProjectTask = (\n  backlog_id,\n  pt_id,\n  history\n) => async dispatch => {\n  try {\n    const res = await axios.get(`/api/backlog/${backlog_id}/${pt_id}`);\n    dispatch({\n      type: GET_PROJECT_TASK,\n      payload: res.data\n    });\n  } catch (error) {\n    history.push(\"/dashboard\");\n  }\n};\n\n// Not sharing, PATCH mapping to update\nexport const updateProjectTask = (\n  backlog_id,\n  pt_id,\n  project_task,\n  history\n) => async dispatch => {\n  try {\n    await axios.patch(`/api/backlog/${backlog_id}/${pt_id}`, project_task);\n\n    history.push(`/projectBoard/${backlog_id}`);\n    dispatch({\n      type: GET_ERRORS,\n      payload: {}\n    });\n  } catch (error) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: error.response.data\n    });\n  }\n};\n\nexport const deleteProjectTask = (backlog_id, pt_id) => async dispatch => {\n  if (\n    window.confirm(\n      `You are deleting project task: ${pt_id}, this action cannot be undone.`\n    )\n  )\n    await axios.delete(`/api/backlog/${backlog_id}/${pt_id}`);\n  dispatch({\n    type: DELETE_PROJECT_TASK,\n    payload: pt_id\n  });\n};\n","import React, { Component } from \"react\";\nimport ProjectTask from \"./ProjectTasks/ProjectTask\";\n\nclass Backlog extends Component {\n  render() {\n    const { project_tasks_prop } = this.props;\n\n    const tasks = project_tasks_prop.map(project_task => (\n      <ProjectTask key={project_task.id} project_task={project_task} />\n    ));\n\n    let todoItems = [];\n    let inProgressItems = [];\n    let doneItems = [];\n\n    sortTasks(tasks, todoItems, inProgressItems, doneItems);\n\n    return (\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-md-4\">\n            <div className=\"card text-center mb-2\">\n              <div className=\"card-header bg-secondary text-white\">\n                <h3>TO DO</h3>\n              </div>\n            </div>\n            {todoItems}\n          </div>\n          <div className=\"col-md-4\">\n            <div className=\"card text-center mb-2\">\n              <div className=\"card-header bg-primary text-white\">\n                <h3>In Progress</h3>\n              </div>\n            </div>\n            {inProgressItems}\n          </div>\n          <div className=\"col-md-4\">\n            <div className=\"card text-center mb-2\">\n              <div className=\"card-header bg-success text-white\">\n                <h3>Done</h3>\n              </div>\n            </div>\n            {doneItems}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Backlog;\nfunction sortTasks(tasks, todoItems, inProgressItems, doneItems) {\n  for (let i = 0; i < tasks.length; i++) {\n    if (tasks[i].props.project_task.status === \"TO_DO\") {\n      todoItems.push(tasks[i]);\n    }\n    if (tasks[i].props.project_task.status === \"IN_PROGRESS\") {\n      inProgressItems.push(tasks[i]);\n    }\n    if (tasks[i].props.project_task.status === \"DONE\") {\n      doneItems.push(tasks[i]);\n    }\n  }\n}\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Backlog from \"./Backlog\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { getBacklog } from \"../../Actions/backlogActions\";\n\nclass ProjectBoard extends Component {\n  //constructor to handle errors\n  constructor() {\n    super();\n    this.state = {\n      errors: {}\n    };\n  }\n\n  componentDidMount() {\n    const { id } = this.props.match.params;\n    this.props.getBacklog(id);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({ errors: nextProps.errors });\n    }\n  }\n\n  render() {\n    const { id } = this.props.match.params;\n    const { project_tasks } = this.props.backlog;\n    const { errors } = this.state;\n\n    let BoardContent;\n\n    const boardAlgorithm = (errors, project_tasks) => {\n      if (project_tasks.length < 1) {\n        if (errors.projectNotFound) {\n          return (\n            <div className=\"alert alert-danger text-center\" role=\"alert\">\n              {errors.projectNotFound}\n            </div>\n          );\n        } else if (errors.projectIdentifier) {\n          return (\n            <div className=\"alert alert-danger text-center\" role=\"alert\">\n              {errors.projectIdentifier}\n            </div>\n          );\n        } else {\n          return (\n            <div className=\"alert alert-info text-center\" role=\"alert\">\n              No Project Tasks on this board\n            </div>\n          );\n        }\n      } else {\n        return <Backlog project_tasks_prop={project_tasks} />;\n      }\n    };\n\n    BoardContent = boardAlgorithm(errors, project_tasks);\n\n    return (\n      <div className=\"container\">\n        <Link to={`/addProjectTask/${id}`} className=\"btn btn-primary mb-3\">\n          <i className=\"fas fa-plus-circle\"> Create Project Task</i>\n        </Link>\n        <br />\n        <hr />\n        {BoardContent}\n      </div>\n    );\n  }\n}\n\nProjectBoard.propTypes = {\n  backlog: PropTypes.object.isRequired,\n  getBacklog: PropTypes.func.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  backlog: state.backlog,\n  errors: state.errors\n});\n\nexport default connect(\n  mapStateToProps,\n  { getBacklog }\n)(ProjectBoard);\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom/cjs/react-router-dom.min\";\nimport { connect } from \"react-redux\";\nimport classnames from \"classnames\";\nimport { addProjectTask } from \"../../../Actions/backlogActions\";\nimport PropTypes from \"prop-types\";\n\nclass AddProjectTask extends Component {\n  constructor(props) {\n    super(props);\n    const { id } = this.props.match.params;\n\n    this.state = {\n      summary: \"\",\n      acceptanceCriteria: \"\",\n      status: \"\",\n      priority: 0,\n      dueDate: \"\",\n      projectIdentifier: id,\n      errors: {}\n    };\n\n    // binding\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      // grab the errors\n      this.setState({ errors: nextProps.errors });\n    }\n  }\n\n  onChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n\n    const newProjectTask = {\n      summary: this.state.summary,\n      acceptanceCriteria: this.state.acceptanceCriteria,\n      status: this.state.status,\n      priority: this.state.priority,\n      dueDate: this.state.dueDate\n    };\n\n    // addProjectTask in backlogActions.js - add all variables that it's expecting\n    this.props.addProjectTask(\n      this.state.projectIdentifier,\n      newProjectTask,\n      this.props.history\n    );\n  }\n\n  render() {\n    const { errors } = this.state;\n    const { id } = this.props.match.params;\n\n    return (\n      <div className=\"add-PBI\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-8 m-auto\">\n              <Link to={`/projectBoard/${id}`} className=\"btn btn-light\">\n                Back to Project Board\n              </Link>\n              <h4 className=\"display-4 text-center\">Add Project Task</h4>\n              <p className=\"lead text-center\">Project Name + Project Code</p>\n              <form onSubmit={this.onSubmit}>\n                <div className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.summary\n                    })}\n                    name=\"summary\"\n                    placeholder=\"Project Task summary\"\n                    value={this.state.summary}\n                    onChange={this.onChange}\n                  />\n                  {errors.summary && (\n                    <div className=\"invalid-feedback\">{errors.summary}</div>\n                  )}\n                </div>\n                <div className=\"form-group\">\n                  <textarea\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.acceptanceCriteria\n                    })}\n                    placeholder=\"Acceptance Criteria\"\n                    name=\"acceptanceCriteria\"\n                    value={this.state.acceptanceCriteria}\n                    onChange={this.onChange}\n                  />\n                  {errors.acceptanceCriteria && (\n                    <div className=\"invalid-feedback\">\n                      {errors.acceptanceCriteria}\n                    </div>\n                  )}\n                </div>\n                <h6>Due Date</h6>\n                <div className=\"form-group\">\n                  <input\n                    type=\"date\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.dueDate\n                    })}\n                    name=\"dueDate\"\n                    value={this.state.dueDate}\n                    onChange={this.onChange}\n                  />\n                  {errors.dueDate && (\n                    <div className=\"invalid-feedback\">{errors.dueDate}</div>\n                  )}\n                </div>\n                <div className=\"form-group\">\n                  <select\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.priority\n                    })}\n                    name=\"priority\"\n                    value={this.state.priority}\n                    onChange={this.onChange}\n                  >\n                    {errors.priority && (\n                      <div className=\"invalid-feedback\">{errors.priority}</div>\n                    )}\n                    <option value={0}>Select Priority</option>\n                    <option value={1}>High</option>\n                    <option value={2}>Medium</option>\n                    <option value={3}>Low</option>\n                  </select>\n                </div>\n\n                <div className=\"form-group\">\n                  <select\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.status\n                    })}\n                    name=\"status\"\n                    value={this.state.status}\n                    onChange={this.onChange}\n                  >\n                    {errors.status && (\n                      <div className=\"invalid-feedback\">{errors.status}</div>\n                    )}\n                    <option value=\"\">Select Status</option>\n                    <option value=\"TO_DO\">TO DO</option>\n                    <option value=\"IN_PROGRESS\">IN PROGRESS</option>\n                    <option value=\"DONE\">DONE</option>\n                  </select>\n                </div>\n\n                <input\n                  type=\"submit\"\n                  className=\"btn btn-primary btn-block mt-4\"\n                />\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nAddProjectTask.propTypes = {\n  addProjectTask: PropTypes.func.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  errors: state.errors\n});\n\nexport default connect(\n  mapStateToProps,\n  { addProjectTask }\n)(AddProjectTask);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport classnames from \"classnames\";\nimport { Link } from \"react-router-dom\";\nimport {\n  getProjectTask,\n  updateProjectTask\n} from \"../../../Actions/backlogActions\";\nimport PropTypes from \"prop-types\";\n\nclass UpdateProjectTask extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      id: \"\",\n      projectSequence: \"\",\n      summary: \"\",\n      acceptanceCriteria: \"\",\n      status: \"\",\n      priority: \"\",\n      dueDate: \"\",\n      projectIdentifier: \"\",\n      create_At: \"\",\n      errors: {}\n    };\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    const { backlog_id, pt_id } = this.props.match.params;\n    this.props.getProjectTask(backlog_id, pt_id, this.props.history);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({ errors: nextProps.errors });\n    }\n\n    const {\n      id,\n      projectSequence,\n      summary,\n      acceptanceCriteria,\n      status,\n      priority,\n      dueDate,\n      projectIdentifier,\n      create_At\n    } = nextProps.project_task;\n\n    this.setState({\n      id,\n      projectSequence,\n      summary,\n      acceptanceCriteria,\n      status,\n      priority,\n      dueDate,\n      projectIdentifier,\n      create_At\n    });\n  }\n\n  onChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n\n    const UpdateProjectTask = {\n      id: this.state.id,\n      projectSequence: this.state.projectSequence,\n      summary: this.state.summary,\n      acceptanceCriteria: this.state.acceptanceCriteria,\n      status: this.state.status,\n      priority: this.state.priority,\n      dueDate: this.state.dueDate,\n      projectIdentifier: this.state.projectIdentifier,\n      create_At: this.state.create_At\n    };\n\n    // console.log(UpdateProjectTask);\n    this.props.updateProjectTask(\n      this.state.projectIdentifier,\n      this.state.projectSequence,\n      UpdateProjectTask,\n      this.props.history\n    );\n  }\n\n  render() {\n    const { errors } = this.state;\n\n    return (\n      <div className=\"add-PBI\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-8 m-auto\">\n              <Link\n                to={`/projectBoard/${this.state.projectIdentifier}`}\n                className=\"btn btn-light\"\n              >\n                Back to Project Board\n              </Link>\n              <h4 className=\"display-4 text-center\">Update Project Task</h4>\n              <p className=\"lead text-center\">\n                Project Name: {this.state.projectIdentifier} | Project Task ID:{\" \"}\n                {this.state.projectSequence}{\" \"}\n              </p>\n              <form onSubmit={this.onSubmit}>\n                <div className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.summary\n                    })}\n                    name=\"summary\"\n                    placeholder=\"Project Task summary\"\n                    value={this.state.summary}\n                    onChange={this.onChange}\n                  />\n                  {errors.summary && (\n                    <div className=\"invalid-feedback\">{errors.summary}</div>\n                  )}\n                </div>\n                <div className=\"form-group\">\n                  <textarea\n                    className=\"form-control form-control-lg\"\n                    placeholder=\"Acceptance Criteria\"\n                    name=\"acceptanceCriteria\"\n                    value={this.state.acceptanceCriteria}\n                    onChange={this.onChange}\n                  />\n                </div>\n                <h6>Due Date</h6>\n                <div className=\"form-group\">\n                  <input\n                    type=\"date\"\n                    className=\"form-control form-control-lg\"\n                    name=\"dueDate\"\n                    value={this.state.dueDate}\n                    onChange={this.onChange}\n                  />\n                </div>\n                <div className=\"form-group\">\n                  <select\n                    className=\"form-control form-control-lg\"\n                    name=\"priority\"\n                    value={this.state.priority}\n                    onChange={this.onChange}\n                  >\n                    <option value={0}>Select Priority</option>\n                    <option value={1}>High</option>\n                    <option value={2}>Medium</option>\n                    <option value={3}>Low</option>\n                  </select>\n                </div>\n\n                <div className=\"form-group\">\n                  <select\n                    className=\"form-control form-control-lg\"\n                    name=\"status\"\n                    value={this.state.status}\n                    onChange={this.onChange}\n                  >\n                    <option value=\"\">Select Status</option>\n                    <option value=\"TO_DO\">TO DO</option>\n                    <option value=\"IN_PROGRESS\">IN PROGRESS</option>\n                    <option value=\"DONE\">DONE</option>\n                  </select>\n                </div>\n\n                <input\n                  type=\"submit\"\n                  className=\"btn btn-primary btn-block mt-4\"\n                />\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nUpdateProjectTask.propTypes = {\n  getProjectTask: PropTypes.func.isRequired,\n  project_task: PropTypes.object.isRequired,\n  updateProjectTask: PropTypes.func.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  project_task: state.backlog.project_task,\n  errors: state.errors\n});\n\nexport default connect(\n  mapStateToProps,\n  { getProjectTask, updateProjectTask }\n)(UpdateProjectTask);\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom/cjs/react-router-dom.min\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\n\nclass Landing extends Component {\n  componentDidMount() {\n    if (this.props.security.validToken) {\n      this.props.history.push(\"/dashboard\");\n    }\n  }\n  render() {\n    return (\n      <div className=\"landing\">\n        <div className=\"light-overlay landing-inner text-dark\">\n          <div className=\"container\">\n            <div className=\"row\">\n              <div className=\"col-md-12 text-center\">\n                <h1 className=\"display-3 mb-4\">\n                  Personal Project Management Tool\n                </h1>\n                <p className=\"lead\">\n                  Create your account to join active projects or start your own\n                </p>\n                <hr />\n                <Link to={\"/register\"} className=\"btn btn-lg btn-primary mr-2\">\n                  Sign Up\n                </Link>\n                <Link to={\"/login\"} className=\"btn btn-lg btn-secondary mr-2\">\n                  Login\n                </Link>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nLanding.propTypes = {\n  security: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  security: state.security\n});\n\nexport default connect(mapStateToProps)(Landing);\n","import React, { Component } from \"react\";\nimport { createNewUser } from \"../../Actions/securityActions\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport classnames from \"classnames\";\n\nclass Register extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      username: \"\",\n      fullName: \"\",\n      password: \"\",\n      confirmPassword: \"\",\n      errors: {}\n    };\n\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  // when you're logged in, you don't have to log in again\n  componentDidMount() {\n    if (this.props.security.validToken) {\n      this.props.history.push(\"/dashboard\");\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({ errors: nextProps.errors });\n    }\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n\n    const newUser = {\n      username: this.state.username,\n      fullName: this.state.fullName,\n      password: this.state.password,\n      confirmPassword: this.state.confirmPassword\n    };\n\n    this.props.createNewUser(newUser, this.props.history);\n  }\n\n  onChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  render() {\n    const { errors } = this.state;\n\n    return (\n      <div className=\"register\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-8 m-auto\">\n              <h1 className=\"display-4 text-center\">Sign Up</h1>\n              <p className=\"lead text-center\">Create your Account</p>\n              <form onSubmit={this.onSubmit}>\n                <div className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.fullName\n                    })}\n                    placeholder=\"Full Name\"\n                    name=\"fullName\"\n                    value={this.state.fullName}\n                    onChange={this.onChange}\n                  />\n                  {errors.fullName && (\n                    <div className=\"invalid-feedback\">{errors.fullName}</div>\n                  )}\n                </div>\n                <div className=\"form-group\">\n                  <input\n                    type=\"email\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.username\n                    })}\n                    placeholder=\"Email Address [Username]\"\n                    name=\"username\"\n                    value={this.state.username}\n                    onChange={this.onChange}\n                  />\n                  {errors.username && (\n                    <div className=\"invalid-feedback\">{errors.username}</div>\n                  )}\n                </div>\n                <div className=\"form-group\">\n                  <input\n                    type=\"password\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.password\n                    })}\n                    placeholder=\"Password\"\n                    name=\"password\"\n                    value={this.state.password}\n                    onChange={this.onChange}\n                  />\n                  {errors.password && (\n                    <div className=\"invalid-feedback\">{errors.password}</div>\n                  )}\n                </div>\n                <div className=\"form-group\">\n                  <input\n                    type=\"password\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.confirmPassword\n                    })}\n                    placeholder=\"Confirm Password\"\n                    name=\"confirmPassword\"\n                    value={this.state.confirmPassword}\n                    onChange={this.onChange}\n                  />\n                  {errors.confirmPassword && (\n                    <div className=\"invalid-feedback\">\n                      {errors.confirmPassword}\n                    </div>\n                  )}\n                </div>\n                <input type=\"submit\" className=\"btn btn-info btn-block mt-4\" />\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nRegister.propTypes = {\n  createNewUser: PropTypes.func.isRequired,\n  security: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  security: state.security,\n  errors: state.errors\n});\n\nexport default connect(\n  mapStateToProps,\n  { createNewUser }\n)(Register);\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport classnames from \"classnames\";\nimport { login } from \"../../Actions/securityActions\";\n\nclass Login extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      username: \"\",\n      password: \"\",\n      errors: {}\n    };\n\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  // when you're logged in, you don't have to log in again\n  componentDidMount() {\n    if (this.props.security.validToken) {\n      this.props.history.push(\"/dashboard\");\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({ errors: nextProps.errors });\n    }\n    if (nextProps.security.validToken) {\n      this.props.history.push(\"/dashboard\");\n    }\n  }\n\n  onChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n\n    const LoginRequest = {\n      username: this.state.username,\n      password: this.state.password\n    };\n\n    this.props.login(LoginRequest);\n  }\n\n  render() {\n    const { errors } = this.state;\n\n    return (\n      <div className=\"login\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-8 m-auto\">\n              <h1 className=\"display-4 text-center\">Log In</h1>\n              <form onSubmit={this.onSubmit}>\n                <div className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.username\n                    })}\n                    placeholder=\"Email Address [username]\"\n                    name=\"username\"\n                    value={this.state.username}\n                    onChange={this.onChange}\n                  />\n                  {errors.username && (\n                    <div className=\"invalid-feedback\">{errors.username}</div>\n                  )}\n                </div>\n                <div className=\"form-group\">\n                  <input\n                    type=\"password\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.password\n                    })}\n                    placeholder=\"Password\"\n                    name=\"password\"\n                    value={this.state.password}\n                    onChange={this.onChange}\n                  />\n                  {errors.password && (\n                    <div className=\"invalid-feedback\">{errors.password}</div>\n                  )}\n                </div>\n                <input type=\"submit\" className=\"btn btn-info btn-block mt-4\" />\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nLogin.propTypes = {\n  login: PropTypes.func.isRequired,\n  errors: PropTypes.object.isRequired,\n  security: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  security: state.security,\n  errors: state.errors\n});\n\nexport default connect(\n  mapStateToProps,\n  { login }\n)(Login);\n","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\n\nconst SecuredRoute = ({ component: Component, security, ...otherProps }) => (\n  <Route\n    {...otherProps}\n    render={props =>\n      security.validToken === true ? (\n        <Component {...props} />\n      ) : (\n        <Redirect to=\"/login\" />\n      )\n    }\n  />\n);\n\nSecuredRoute.propTypes = {\n  security: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  security: state.security\n});\n\nexport default connect(mapStateToProps)(SecuredRoute);\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport Dashboard from \"./Components/Dashboard\";\nimport Header from \"./Components/Layout/Header\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport AddProject from \"./Components/Project/AddProject\";\nimport UpdateProject from \"./Components/Project/UpdateProject\";\nimport { Provider } from \"react-redux\"; // for the store\nimport store from \"./Store\";\nimport ProjectBoard from \"./Components/ProjectBoard/ProjectBoard\";\nimport AddProjectTask from \"./Components/ProjectBoard/ProjectTasks/AddProjectTask\";\nimport UpdateProjectTask from \"./Components/ProjectBoard/ProjectTasks/UpdateProjectTask\";\nimport Landing from \"./Components/Layout/Landing\";\nimport Register from \"./Components/UserManagement/Register\";\nimport Login from \"./Components/UserManagement/Login\";\nimport jwt_decode from \"jwt-decode\";\nimport setJwtToken from \"./SecurityUtils/setJwtToken\";\nimport { SET_CURRENT_USER } from \"./Actions/types\";\nimport { logout } from \"./Actions/securityActions\";\nimport SecuredRoute from \"./SecurityUtils/SecureRoute\";\n\n// token will be valid in the localStorage until the expiry time i assigned in the server\n// so retrieve it and assign it using the setJwtToken() method I created, so that all the other Routes will be available with jwtToken in the header [\"Authorization\"]\nconst jwtToken = localStorage.getItem(\"jwtToken\");\n\nif (jwtToken) {\n  setJwtToken(jwtToken);\n\n  const decoded_jwtToken = jwt_decode(jwtToken);\n  store.dispatch({\n    type: SET_CURRENT_USER,\n    payload: decoded_jwtToken\n  });\n\n  const currentTime = Date.now() / 1000;\n  // exp comes from the state from the token\n  // if the token is expired\n  if (decoded_jwtToken.exp < currentTime) {\n    // handle logout\n    store.dispatch(logout());\n    window.location.href = \"/\";\n  }\n}\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider store={store}>\n        <Router>\n          <div className=\"App\">\n            <Header />\n            {\n              // Public Routes\n            }\n\n            <Route exact path=\"/\" component={Landing} />\n            <Route exact path=\"/register\" component={Register} />\n            <Route exact path=\"/login\" component={Login} />\n\n            {\n              // Private Routes\n            }\n            <Switch>\n              <SecuredRoute exact path=\"/dashboard\" component={Dashboard} />\n              <SecuredRoute exact path=\"/addProject\" component={AddProject} />\n              <SecuredRoute\n                exact\n                path=\"/updateProject/:id\"\n                component={UpdateProject}\n              />\n              <SecuredRoute\n                exact\n                path=\"/projectBoard/:id\"\n                component={ProjectBoard}\n              />\n              <SecuredRoute\n                exact\n                path=\"/addProjectTask/:id\"\n                component={AddProjectTask}\n              />\n              <SecuredRoute\n                exact\n                path=\"/updateProjectTask/:backlog_id/:pt_id\"\n                component={UpdateProjectTask}\n              />\n            </Switch>\n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}